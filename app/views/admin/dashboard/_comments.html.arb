# frozen_string_literal: true

panel.panel t('activerecord.models.comment.other') do
  panel.table_for CommentDecorator.decorate_collection(query) do |p|
    if query.empty?
      p.span t('post.no_results', page: t('activerecord.models.comment.one'))
    else
      p.column t('activerecord.attributes.comment.link_source'), :link_source
      p.column t('activerecord.attributes.comment.message') do |resource|
        truncate_html(resource.content, length: 100)
      end
      p.column t('activerecord.attributes.comment.lang'), :lang
      p.bool_column t('activerecord.attributes.comment.validated'), :validated
      # p.bool_column t('activerecord.attributes.comment.signalled'), :signalled
      p.column t('activerecord.attributes.comment.created_at'), :created_at

      p.column 'Actions' do |comment|
        link_to t('active_admin.show'), admin_post_comment_path(comment)
      end
    end
  end
end
