= render 'comments/microdatas', resource: comment
.row
  .small-12.columns
    .comment id="comment-#{comment.id}" class="#{params[:action] == 'reply' && comment.id.to_s == params[:id] ? 'comment-highlight' : ''}"
      .row
        .small-3.medium-2.columns
          span.comment-avatar = comment.avatar

        .small-9.medium-10.columns
          p
            == "#{comment.pseudo_registered_or_guest},"
            span<> = comment.comment_created_at

            - if comment.object.class.name == 'Comment'
              - if can? :signal, comment
                | -
                - if comment.signalled?
                  span.comment-signalled<>
                    = I18n.t('comment.signalled.already_signalled')
                - else
                  span.comment-not-signalled<> class="number-#{comment.id}"
                    = link_to I18n.t('comment.signalled.not_signalled'), send("signal_#{@commentable.class.name.underscore.singularize}_comment_path", @commentable, comment, token: comment.token), method: :get, remote: true, data: { confirm: I18n.t('comment.signalled.alert') }

              | -
              span.comment-reply<>
                = link_to I18n.t('comment.reply.label'), send("reply_#{@commentable.class.name.underscore.singularize}_comment_path", @commentable, comment, token: comment.token)

              - if can? :destroy, comment
                | -
                span.comment-destroy<>
                  = link_to I18n.t('activerecord.attributes.comment.destroy'), send("#{@commentable.class.name.underscore.singularize}_comment_path", @commentable, comment, current_comment_id: params[:id], current_comment_action: params[:action]), method: :delete, remote: true, data: { confirm: I18n.t('active_admin.destroy.confirm', object_kind: I18n.t('activerecord.models.comment.one')) }

            - else
              - if can? :destroy, comment
                | -
                span.comment-destroy<>
                  = link_to I18n.t('activerecord.attributes.guest_book.destroy'), guest_book_path(comment), method: :delete, remote: true, data: { confirm: I18n.t('active_admin.destroy.confirm', object_kind: I18n.t('activerecord.models.guest_book.one')) }

          div = comment.content
